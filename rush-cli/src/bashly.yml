name: rush
help: Personal package manager
version: 0.7.4
completions: [$(rush list -s -a)]

environment_variables:
- name: rush_config
  help: |-
    Location of the rush config file.
    Default: ~/rush.ini

commands:
- name: add
  alias: a
  group: Repository
  completions: [<directory>]
  help: |-
    Register a local repository
    This command adds the specified path to the configuration file.

  args:
  - name: repo
    required: true
    help: Repository name.

  - name: path
    required: true
    help: Path to the repository.

  examples:
  - rush add default ~/rush-repos/default

- name: remove
  alias: r
  group: Repository
  help: |-
    Unregister a local repository
    This command removes the specified path to the configuration file.

  args:
  - name: repo
    required: true
    help: Repository name.

  flags:
  - long: --purge
    short: -p
    help: Also remove the local repository's directory.

  examples:
  - rush remove bobby
  - rush remove bobby --purge

- name: clone
  group: Git
  completions: [<directory>]
  help: |-
    Clone a GitHub package repository
    This command clones the repository and registers it in the
    configuration file.

  args:
  - name: github_user
    required: true
    help: &github_user_help |-
      Github user.
      This user is expected to have a repository named 'rush-repo'.
      If you need to use a different name, use the 'user/repo' syntax.

  - name: path
    help: |-
      Local path to clone the repository to.
      Default: ~/rush-repos/<github_user>/<github_repo>

  flags:
  - long: --ssh
    short: -s
    help: Clone using SSH instead of HTTPS.

  - long: --default
    short: -d
    help: Set this as the default repository (same as '--name default').

  - long: --name
    short: -n
    arg: name
    help: |-
      Name to use in the config file.
      Default: GitHub user

  - long: --shallow
    short: -w
    help: Perform a shallow clone, instead of the default full clone.

  - long: --ignore
    short: -i
    help: Ignore (do not clone) if a repository with this name exists.

  examples:
  - rush clone bobby
  - rush clone bobby --default
  - rush clone bobby/bobs-repo ./repos/bobby --ssh
  - rush clone bobby --name sample --ignore

- name: pull
  alias: [p, download, update]
  group: Git
  help: Git pull one or all repositories

  args:
  - name: repo
    help: Repository name.

- name: push
  alias: upload
  group: Git
  help: Git push one or all repositories

  args:
  - name: repo
    help: |-
      Repository name.
      Default: default

  flags:
  - long: --all
    short: -a
    help: Push all repositories.

  - long: --message
    short: -m
    arg: TEXT
    help: |-
      Commit message.
      Default: automatic commit

- name: config
  alias: c
  group: Config
  help: Show or edit the configuration file

  flags:
  - long: --edit
    short: -e
    help: Open the configuration file for editing.

- name: default
  group: Config
  help: |-
    Set a default repository
    This command adds (or updates) a repository named 'default' to the
    configuration file, and copies the path from the provided repo.

  args:
  - name: repo
    required: true
    help: Repository name.

  examples:
  - rush default sample

- name: get
  alias: g
  group: Package
  completions: [$(rush list -s -a)]
  help: |-
    Install a package
    This command runs the main script in the package directory.
    
    This is the default command, which means that running 'rush package' is
    the same as running 'rush get package'.

  default: true

  args:
  - name: package
    required: true
    help: &package_help |-
      Package name.
      This can either be the package name without the repository name (in
      this case, the default repository will be used) or in the form of
      'repo:package'.

  flags:
  - long: --clone
    short: -c
    help: |-
      Clone the repository if it is not found locally.
      This flag will look for a GitHub user with the same name as the
      repository, and attempt to clone their rush-repo repository.

  examples:
  - rush ruby
  - rush get ruby
  - rush get centos:ruby 

- name: undo
  alias: u
  group: Package
  completions: [$(rush list -s -a)]
  help: |-
    Uninstall a package
    This command runs the undo script in the package directory.

  args:
  - name: package
    required: true
    help: *package_help

  examples:
  - rush undo ruby
  - rush undo centos:ruby 

- name: snatch
  group: Package
  help: |-
    Install a package from a remote repo
    This command is a shortcut to running clone followed by get.
    It will clone the repository to a temporary directory and run the main
    package script.

  args:
  - name: github_user
    required: true
    help: *github_user_help

  - name: package
    required: true
    help: Package name.

  examples:
  - rush snatch james python
  - rush snatch james/other-rush-repo python

- name: copy
  group: Package
  completions: [$(rush list -s -a)]
  help: Copy a package between local repositories

  args:
  - name: source_package
    required: true
    help: |-
      Source package name.
      This can either be the package name without the repository name (in
      this case, the default repository will be used) or in the form of
      'repo:package'.

  - name: target_package
    help: |-
      Target package name.
      This can either be the package name without the repository name (in
      this case, the default repository will be used) or in the form of
      'repo:package'.
      If left empty, the package will be copied with the same name to the
      default repository.

  flags:
  - long: --force
    short: -f
    help: Copy the package even if it already exists in the target repository.

  examples:
  - rush copy james:python
  - rush copy james:python bobby
  - rush copy james:python bobby:python3 --force

- name: info
  alias: i
  group: Package
  completions: [$(rush list -s -a)]
  help: |-
    Show information about a package
    This command shows the info file from the package directory.

  args:
  - name: package
    required: true
    help: *package_help

  examples:
  - rush info ruby
  - rush info centos:ruby

- name: list
  alias: l
  group: Package
  help: Show packages in one or all repositories

  args:
  - name: repo_or_package
    help: |-
      Repository name or package name.
      - Leave blank to show all packages in all repositories.
      - Provide a repository name to show only packages in this repository.
      - Provide a package name (may be in the form of 'repo:package') to
        show nested packages.

  flags:
  - long: --simple
    short: -s
    help: Show only package names.

  - long: --all
    short: -a
    help: Show nested packages as well.

  examples:
  - rush list
  - rush list personal:apps
  - rush list personal
  - rush list apps
  - rush list apps --simple --all

- name: search
  alias: s
  group: Package
  help: Search in package names and info files

  args:
  - name: text
    help: Text to search for.
    required: true

- name: edit
  alias: e
  group: Package
  completions: [$(rush list -s -a)]
  help: Edit package files

  args:
  - name: package
    required: true
    help: *package_help

  - name: file
    help: |-
      File to edit.
      Default: main

- name: show
  group: Package
  completions: [$(rush list -s -a)]
  help: Show package files

  args:
  - name: package
    required: true
    help: *package_help

  - name: file
    help: File to show (show all if not specified).

- name: completions
  group: Internal
  help: |-
    Generate bash completions
